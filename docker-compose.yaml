version: '3.8'
services:
  dev:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    ports:
      - "8080:8080"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - KAFKA_ID=appname
      - DATABASE=appname
      - KAFKA_1=kafka:9092
      - JWT_KEY=something
      - ENV=development
      - PORT=8080
    # volumes:
    #   - ./client/build/:
    #   - ./dist/:
    #   - /app/client/node_modules
    #   - /app/node_modules
    #   - .:/app
    depends_on:
      - kafka
      - mongodb

  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_LOG4J_LOGGERS: "kafka.controller=ERROR,kafka.log.LogCleaner=ERROR"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper

  mongodb:
    image: mongo
    hostname: mongodb
    restart: unless-stopped
    volumes:
      - appname:/data/db/appname
    ports:
      - "27017:27017"

volumes:
  appname: