version: '3.8'
services:
  client:
    build:
      context: client
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - /app/node_modules
      - ./client:/app
    depends_on:
      - server

  server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - FIREBASE_SA='{"type":"service_account","project_id":"librarysoftware-5765","private_key_id":"xxx","private_key":"-----BEGIN PRIVATE KEY-----\n*\n-----END PRIVATE KEY-----\n","client_email":"xxx@librarysoftware-xxx.iam.gserviceaccount.com","client_id":"980","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-756%40librarysoftware-546.iam.gserviceaccount.com","universe_domain":"googleapis.com"}'
        - MONGO_URI=mongodb+srv://username:password@cluster0.4dxvdyw.mongodb.net
    restart: always
    ports:
      - "8080:8080"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - FIREBASE_SA=${FIREBASE_SA}
      - KAFKA_ID=appname
      - DATABASE=appname
      - NODE_ENV=development
      - KAFKA_1=kafka:9092
      - JWT_KEY=something
      - PORT=8080
    volumes:
      - /app/node_modules
      - .:/app
    depends_on:
      # - kafka
      - mongodb

  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   hostname: zookeeper
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_SERVER_ID: 1
  #     ZOOKEEPER_SERVERS: zookeeper:2888:3888

  # kafka:
  #   image: wurstmeister/kafka:2.11-1.1.1
  #   hostname: kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LISTENERS: PLAINTEXT://:9092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_LOG_DIRS: /var/lib/kafka/data
  #     KAFKA_LOG4J_LOGGERS: "kafka.controller=ERROR,kafka.log.LogCleaner=ERROR"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #   depends_on:
  #     - zookeeper

  mongodb:
    image: mongo
    hostname: mongodb
    restart: unless-stopped
    volumes:
      - appname:/data/db/appname
    ports:
      - "27017:27017"

volumes:
  appname: