name: CI
env: { STAGE_PORT: 9091, CONTAINER_PORT: 8080 }
on:
  workflow_dispatch:
  # push:
jobs:
  server-test:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Get the code
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Load & Cache Dependencies
        uses: ./.github/actions/cached-deps
        with:
          prefix: .
          caching: "false"
      - name: üß™ Test Auth Service
        run: npm run test-auth:ci
      - name: üß™ Test Common Service
        run: npm run test-common:ci
  dockerize:
    needs: [server-test]
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
          - 27010:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: toor
    env:
      MONGODB_CLUSTER_ADDRESS: 127.0.0.1:27017 # mongodb, if ports not mentioned
    steps:
      - name: ‚¨áÔ∏è Get the code
        uses: actions/checkout@v4
      - name: üêü Build stage image
        run: |
          docker build -f Dockerfile.prod -t "${{ secrets.WF_DOCKER_STAGE_IMAGE_NAME }}" . \
          --build-arg NODE_ENV="production" \
          --build-arg MONGO_URI="${{ env.MONGODB_CLUSTER_ADDRESS }}" \
          --build-arg BACKEND_URL="${{ secrets.WF_BACKEND_STAGE_URL }}" \
          --build-arg MONOLITHIC_URL="${{ secrets.WF_MONOLITHIC_STAGE_URL }}" \
          --build-arg ADMIN_PASSWORD="${{ secrets.WF_ADMIN_PASSWORD_STAGE }}" \
          --build-arg DATABASE="${{ secrets.WF_MONGODB_STAGE_DATABASE_NAME }}"
      - name: üè° Run stage image
        run: docker run -d --name=stage -p ${{ env.STAGE_PORT }}:${{ env.CONTAINER_PORT }} ${{ secrets.WF_DOCKER_STAGE_IMAGE_NAME }}
      - name: üí§ Sleep for 30 seconds
        run: sleep 30
      - name: üìù Stage Container Logs
        run: docker logs stage
      - name: üìû Calling stage api
        run: curl http://localhost:${{ env.STAGE_PORT }}/api/currentuser
      - name: üí¨ Sending Notification
        uses: stegzilla/discord-notify@v4
        with:
          title: dockerize
          include_image: true
          username: ${{ github.actor }}
          message: ‚úÖ Working!, Now Stage This üëâ Link!!!
          webhook_url: ${{ secrets.WF_DISCORD_WEBHOOK_URL }}
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
